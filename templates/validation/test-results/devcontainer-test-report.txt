Dev Container Test Report
=========================
Generated: 10/18/2025 14:00:17
Test Environment: Windows PowerShell

Summary:
Total Tests: 12
Passed: 6
Failed: 3
Success Rate: 50%

Detailed Results:
basic-cpp devcontainer.json - PASS
basic-cpp JSON syntax - FAIL: ':' または '}' ではなく無効なオブジェクトが渡されました。 (138): {
    "name": "Basic C++ Development",
    "build": {
        "dockerfile": "Dockerfile",
        "context": ".."
    },
    
    // Features to add to the dev container
    "features": {},
    
    // Configure tool-specific properties
    "customizations": {
        "vscode": {
            "settings": {
                "C_Cpp.default.compilerPath": "/usr/bin/gcc",
                "C_Cpp.default.cStandard": "c17",
                "C_Cpp.default.cppStandard": "c++17",
                "C_Cpp.default.intelliSenseMode": "linux-gcc-x64",
                "cmake.configureOnOpen": true,
                "cmake.buildDirectory": "${workspaceFolder}/build",
                "files.associations": {
                    "*.h": "c",
                    "*.hpp": "cpp"
                }
            },
            "extensions": [
                "ms-vscode.cpptools",
                "ms-vscode.cpptools-extension-pack",
                "ms-vscode.cmake-tools",
                "twxs.cmake",
                "ms-vscode.makefile-tools",
                "vadimcn.vscode-lldb"
            ]
        }
    },
    
    // Use 'forwardPorts' to make a list of ports inside the container available locally
    "forwardPorts": [],
    
    // Use 'postCreateCommand' to run commands after the container is created
    "postCreateCommand": "echo 'Dev container ready! Run: cmake -S . -B build && cmake --build build' > /tmp/welcome.txt && cat /tmp/welcome.txt",
    
    // Configure container user
    "remoteUser": "vscode",
    
    // Mount the workspace with optimized settings for WSL2
    "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",
    "workspaceFolder": "/workspace",
    
    // WSL2 performance optimizations
    "mounts": [
        "source=/tmp,target=/tmp,type=bind,consistency=cached"
    ],
    
    // Container environment variables
    "containerEnv": {
        "MAKEFLAGS": "-j$(nproc)"
    },
    
    // Run arguments for the container
    "runArgs": [
        "--cap-add=SYS_PTRACE",
        "--security-opt", "apparmor=unconfined"
    ]
}
basic-cpp Dockerfile - PASS
basic-cpp Docker build - SKIP: 用語 'docker' は、コマンドレット、関数、スクリプト ファイル、または操作可能なプログラムの名前として認識されません。名前が正しく記述されていることを確認し、パスが含まれている場合はそのパスが正しいことを確認してから、再試行してください。
calculator-cpp devcontainer.json - PASS
calculator-cpp JSON syntax - FAIL: ':' または '}' ではなく無効なオブジェクトが渡されました。 (143): {
    "name": "Calculator C++ Development",
    "build": {
        "dockerfile": "Dockerfile",
        "context": ".."
    },
    
    // Features to add to the dev container
    "features": {},
    
    // Configure tool-specific properties
    "customizations": {
        "vscode": {
            "settings": {
                "C_Cpp.default.compilerPath": "/usr/bin/gcc",
                "C_Cpp.default.cStandard": "c17",
                "C_Cpp.default.cppStandard": "c++17",
                "C_Cpp.default.intelliSenseMode": "linux-gcc-x64",
                "C_Cpp.default.includePath": [
                    "${workspaceFolder}/include",
                    "${workspaceFolder}/src"
                ],
                "cmake.configureOnOpen": true,
                "cmake.buildDirectory": "${workspaceFolder}/build",
                "files.associations": {
                    "*.h": "c",
                    "*.hpp": "cpp"
                }
            },
            "extensions": [
                "ms-vscode.cpptools",
                "ms-vscode.cpptools-extension-pack",
                "ms-vscode.cmake-tools",
                "twxs.cmake",
                "ms-vscode.makefile-tools"
            ]
        }
    },
    
    // Use 'forwardPorts' to make a list of ports inside the container available locally
    "forwardPorts": [],
    
    // Use 'postCreateCommand' to run commands after the container is created
    "postCreateCommand": "echo 'Calculator C++ Dev container ready! This project demonstrates library creation and header/source separation.' > /tmp/welcome.txt && cat /tmp/welcome.txt",
    
    // Configure container user
    "remoteUser": "vscode",
    
    // Mount the workspace with optimized settings for WSL2
    "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",
    "workspaceFolder": "/workspace",
    
    // WSL2 performance optimizations
    "mounts": [
        "source=/tmp,target=/tmp,type=bind,consistency=cached"
    ],
    
    // Container environment variables
    "containerEnv": {
        "MAKEFLAGS": "-j$(nproc)"
    },
    
    // Run arguments for the container
    "runArgs": [
        "--cap-add=SYS_PTRACE",
        "--security-opt", "seccomp=unconfined"
    ]
}
calculator-cpp Dockerfile - PASS
calculator-cpp Docker build - SKIP: 用語 'docker' は、コマンドレット、関数、スクリプト ファイル、または操作可能なプログラムの名前として認識されません。名前が正しく記述されていることを確認し、パスが含まれている場合はそのパスが正しいことを確認してから、再試行してください。
json-parser-cpp devcontainer.json - PASS
json-parser-cpp JSON syntax - FAIL: ':' または '}' ではなく無効なオブジェクトが渡されました。 (144): {
    "name": "JSON Parser C++ Development",
    "build": {
        "dockerfile": "Dockerfile",
        "context": ".."
    },
    
    // Features to add to the dev container
    "features": {},
    
    // Configure tool-specific properties
    "customizations": {
        "vscode": {
            "settings": {
                "C_Cpp.default.compilerPath": "/usr/bin/gcc",
                "C_Cpp.default.cStandard": "c17",
                "C_Cpp.default.cppStandard": "c++17",
                "C_Cpp.default.intelliSenseMode": "linux-gcc-x64",
                "C_Cpp.default.includePath": [
                    "${workspaceFolder}/src",
                    "${workspaceFolder}/build/_deps/*/include",
                    "/usr/include",
                    "/usr/local/include"
                ],
                "C_Cpp.default.compileCommands": "${workspaceFolder}/build/compile_commands.json",
                "cmake.configureOnOpen": true,
                "cmake.buildDirectory": "${workspaceFolder}/build",
                "files.associations": {
                    "*.h": "c",
                    "*.hpp": "cpp",
                    "*.json": "json"
                }
            },
            "extensions": [
                "ms-vscode.cpptools",
                "ms-vscode.cpptools-extension-pack",
                "ms-vscode.cmake-tools",
                "twxs.cmake",
                "ms-vscode.makefile-tools",
                "ms-vscode.json"
            ]
        }
    },
    
    // Use 'forwardPorts' to make a list of ports inside the container available locally
    "forwardPorts": [],
    
    // Use 'postCreateCommand' to run commands after the container is created
    "postCreateCommand": "echo 'JSON Parser C++ Dev container ready! This project demonstrates external library integration with nlohmann/json.' > /tmp/welcome.txt && cat /tmp/welcome.txt",
    
    // Configure container user
    "remoteUser": "vscode",
    
    // Mount the workspace with optimized settings for WSL2
    "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",
    "workspaceFolder": "/workspace",
    
    // WSL2 performance optimizations
    "mounts": [
        "source=/tmp,target=/tmp,type=bind,consistency=cached"
    ],
    
    // Container environment variables
    "containerEnv": {
        "MAKEFLAGS": "-j$(nproc)"
    },
    
    // Run arguments for the container
    "runArgs": [
        "--cap-add=SYS_PTRACE",
        "--security-opt", "seccomp=unconfined"
    ]
}
json-parser-cpp Dockerfile - PASS
json-parser-cpp Docker build - SKIP: 用語 'docker' は、コマンドレット、関数、スクリプト ファイル、または操作可能なプログラムの名前として認識されません。名前が正しく記述されていることを確認し、パスが含まれている場合はそのパスが正しいことを確認してから、再試行してください。

Environment Information:
OS: Microsoft Windows NT 10.0.26200.0
PowerShell: 5.1.26100.6899
Docker: Not available
